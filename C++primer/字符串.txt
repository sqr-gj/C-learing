#include <string>	using std::string
1.定义、初始化
string str;
string str = "Hello World!";		//拷贝初始化
string str("Hello World!");		//直接初始化
string str = s;
string str(s);
string str(n, 'c');		//n个字符c组成的字符串
string str(cp, n)		//cp指向数组中前n个字符的拷贝
string str(s2, pos，(len))		//s2从下标pos开始的字符拷贝， 第三个可选参数为拷贝len个字符

string str = s.substr(pos, n)		//pos为开始位置，n为拷贝字符个数  返回了s的部分或全部拷贝

2.string操作
os << str 			//写字符串
is >> str			//读字符串
getline(is, str)		//从流中读取一行，写入str ，返回is
s1 + s2			//字符串连接
str[n]			//返回第n个字符的引用
str.empty()		//是否为空
str.size()			//字符串中字符个数

修改string:	所支持的args不同
s.insert(pos, args)		//pos之前插入args指定的字符		。pos可以是下标也可以是迭代器
s.erase(pos, len)		//删除pos开始的len个字符
s.assign(args)		//将s中字符替换为args指定的字符  返回s的引用
s.append(args)		//将args追加到s
s.replace(range, args)	//将range中的字符替换为args指定的字符		range可以是一对迭代器或是下标+长度
	
3.char处理
#include <cctype>
isalnum(c)		//c为字母或数字时为真
isalpha(c)			//c为字母时为真
isdigit(c)			//c为数字时为真
iscntrl(c)			//c为控制字符时为真
islower(c)			//c为小写字母时为真
isupper(c）		//c为大写字母时为真
tolower(c)		//返回c小写字母
toupper(c)		//返回c大写字母

4.c风格字符串
字符串存放在数组中，并以空字符结尾('\0')
#include <cstring>
strlen(str)			//返回str长度(不计入空字符
strcmp(str1, str2)		//比较相等性，str1 == str2  return 0;    str1 < str2  return -a;    str1 > str2  return a;
strcat(str1, str2)		//str2附加在str1之后
strcpy(str1, str2)		//str2拷贝给str1，返回str1

5.string搜索
s.find(args)  s.rfind(args)	//查找s中args第一次/最后一次出现的位置
s.find_first/last_(not)_of(args)	//在s中查找args中任何一个字符第一次/最后一次出现的位置， 在s中查找第一个/最后一个不在args中的字符

6.数值转换
to_string(i)		//数值i转换为字符串

字符串转换为数值， 第一个参数为字符串，第二个可选参数为下标，第三个可选参数为转换后的基数
stoi()
stol()
stoul()
stoll()
...