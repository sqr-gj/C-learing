1.指针的效率（指针与下标）
遍历数组时，使用下标，每次+1 需要与类型长度相乘进行乘法运算   （更易读
           使用指针，编译时进行一次乘法运算，随后每次相加     （效率可能更高
2.数组名作为函数参数
传递的为指向数组首元素的指针，间接访问数组内容
3.多维数组存储时仍为内存中连续存储
4.链表使用虚拟头结点方便头结点的处理
5.#define
定义运算时  注意括号去确保优先级
#argument 翻译为 argument
a##b  翻译为ab	可用于两个符号连接为一个符号  创建标识符
6.宏与函数
函数参数必须被声明为特定类型		宏无此限制
每次调用宏，宏定义代码将被拷贝进程序
宏定义约定为名字全部大写
7.#undef
移除宏定义
8.条件编译
#if	#endif	#elif	#else
#ifdef	#ifndef
9.头文件中应该只包含一组函数或数据的声明	(每次#include 都有些额外开销
10.避免多重包含	
#ifndef
#define
#endif